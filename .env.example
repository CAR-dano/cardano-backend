# .env.example - Environment variables for CAR-dano Backend
# Copy this file to .env and fill in your actual values.
# Do NOT commit your .env file to version control.

# --- General Application Settings ---
# NODE_ENV: The environment the application is running in (e.g., development, production, test).
# This affects logging, error handling, and other environment-specific behaviors.
NODE_ENV=development

# PORT: The port number the application will listen on.
PORT=3000

# URL: The base public URL of the deployed backend application.
# Used for constructing callback URLs, links in emails, etc.
# Example: http://localhost:3000 or https://api.yourdomain.com
URL=http://localhost:3000

# --- Database Configuration (PostgreSQL with Prisma) ---
# DATABASE_URL: The connection string for your PostgreSQL database.
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
# Ensure your PostgreSQL server is running and accessible.
DATABASE_URL="postgresql://your_db_user:your_db_password@localhost:5432/car_dano_db?schema=public"

# The following are typically part of DATABASE_URL but can be used separately if needed by Docker or other tools.
# POSTGRES_USER: Username for the PostgreSQL database.
POSTGRES_USER=your_db_user
# POSTGRES_PASSWORD: Password for the PostgreSQL database user.
POSTGRES_PASSWORD=your_db_password
# POSTGRES_DB: Name of the PostgreSQL database.
POSTGRES_DB=car_dano_db

# --- JWT (JSON Web Token) Authentication ---
# JWT_SECRET: A strong, unique secret key used to sign and verify JWTs.
# Keep this confidential. Changing it will invalidate all existing tokens.
JWT_SECRET=your-very-strong-jwt-secret-key-change-me

# JWT_EXPIRATION_TIME: How long a JWT token is valid for (e.g., 60s, 15m, 1h, 7d).
JWT_EXPIRATION_TIME=1h

# --- Google OAuth 2.0 Credentials ---
# GOOGLE_CLIENT_ID: The Client ID obtained from Google Cloud Console for your OAuth 2.0 application.
GOOGLE_CLIENT_ID=YOUR_CLIENT_ID.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET: The Client Secret obtained from Google Cloud Console. Keep this confidential.
GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_CLIENT_SECRET
# GOOGLE_CALLBACK_URL: The URL Google will redirect to after successful authentication.
# Should be {URL}/api/v1/auth/google/callback, where {URL} is your backend's public URL.
GOOGLE_CALLBACK_URL=http://localhost:3000/api/v1/auth/google/callback

# --- Client Application Settings ---
# CLIENT_BASE_URL: The base URL of your frontend/client application.
# Used for redirects after certain operations (e.g., after successful OAuth login if handled server-side).
CLIENT_BASE_URL=http://localhost:3001 # Or your frontend's URL

# --- PDF File Storage ---
# PDF_PUBLIC_BASE_URL: The public base URL path from which archived PDF reports can be accessed.
# This might be a route on your server that serves static files or a link to an external storage.
# Example: /static/reports or https://cdn.yourdomain.com/reports
PDF_PUBLIC_BASE_URL=/pdfarchived

# --- Blockfrost API Configuration (Cardano Blockchain Interaction) ---
# BLOCKFROST_ENV: Specifies which Cardano network Blockfrost should connect to.
# Valid values: preprod, preview, mainnet
BLOCKFROST_ENV=preview

# BLOCKFROST_API_KEY_PREVIEW: Your Blockfrost API key for the Cardano Preview Testnet.
BLOCKFROST_API_KEY_PREVIEW=your_blockfrost_preview_api_key
# BLOCKFROST_API_KEY_PREPROD: Your Blockfrost API key for the Cardano Pre-Production Testnet.
BLOCKFROST_API_KEY_PREPROD=your_blockfrost_preprod_api_key
# BLOCKFROST_API_KEY_MAINNET: Your Blockfrost API key for the Cardano Mainnet.
BLOCKFROST_API_KEY_MAINNET=your_blockfrost_mainnet_api_key

# --- Cardano Wallet Configuration (Testnet) ---
# WALLET_SECRET_KEY_TESTNET: The signing key (.skey file content or path) for your Cardano testnet wallet.
# This is used if the backend needs to sign transactions (e.g., minting NFTs). Keep highly confidential.
WALLET_SECRET_KEY_TESTNET=your_testnet_wallet_signing_key_content_or_path
# WALLET_ADDRESS_TESTNET: The address of your Cardano testnet wallet.
WALLET_ADDRESS_TESTNET=addr_test1...

# --- Cardano Wallet Configuration (Mainnet) ---
# WALLET_SECRET_KEY_MAINNET: The signing key (.skey file content or path) for your Cardano mainnet wallet.
# Used for mainnet transactions. Keep highly confidential.
WALLET_SECRET_KEY_MAINNET=your_mainnet_wallet_signing_key_content_or_path
# WALLET_ADDRESS_MAINNET: The address of your Cardano mainnet wallet.
WALLET_ADDRESS_MAINNET=addr1...

# --- Miscellaneous ---
# DUMMY_USER_ID: A placeholder or default user ID, potentially used for seeding, testing, or system operations.
# Its specific use depends on the application logic.
DUMMY_USER_ID=some_dummy_user_uuid